name: Go Test
on:
  push:
    branches: [ 1.x, 2.x, feature/* ]
  pull_request:
    branches: [ 1.x, 2.x ]
env:
  GOPROXY: "https://proxy.golang.org"

jobs:
  test:
    name: "go test"
    strategy:
      matrix:
        go-version: [ 1.21.x, 1.22.x, 1.23.x ]
        platform: [ ubuntu-latest ]
        mysql-version: ['mysql:latest', 'mysql:5.7']
    runs-on: ${{ matrix.platform }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379
      mysql:
        image: ${{ matrix.mysql-version }}
        env:
          MYSQL_DATABASE: gorm
          MYSQL_USER: gorm
          MYSQL_PASSWORD: gorm
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -ugorm -pgorm"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - run: go version

      - name: Run Buf
        uses: bufbuild/buf-setup-action@v1.45.0
      - run: |
          buf --version
          buf generate

      - name: Run tests
        run: go test ./... -v -covermode=atomic -race -coverprofile=coverage.txt

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}